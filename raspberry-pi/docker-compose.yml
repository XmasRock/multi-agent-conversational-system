version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - N8N_AI_ENABLED=true
      - OPENAI_API_BASE=http://${JETSON_IP}:8001/v1
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - agent_network

  mcp-server:
    build: ./mcp-server
    container_name: mcp-server
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://mcpuser:${POSTGRES_PASSWORD}@postgres:5432/mcp
      - MQTT_BROKER=mqtt://mqtt:1883
    depends_on:
      - redis
      - postgres
      - mqtt
    restart: unless-stopped
    networks:
      - agent_network

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    restart: unless-stopped
    networks:
      - agent_network

  redis:
    image: redis:7-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb
    restart: unless-stopped
    networks:
      - agent_network

  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
    restart: unless-stopped
    networks:
      - agent_network

  mqtt:
    image: eclipse-mosquitto:2
    container_name: mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
    restart: unless-stopped
    networks:
      - agent_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - agent_network

volumes:
  n8n_data:
  postgres_data:
  redis_data:
  chromadb_data:
  mosquitto_data:
  grafana_data:

networks:
  agent_network:
    driver: bridge
